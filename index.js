{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMe7BRxbGFZkDzT4pM2Fg/5"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["\n","const express = require(\"express\");\n","const bodyParser = require(\"body-parser\");\n","const serviceAccount = JSON.parse(process.env.FIREBASE_CONFIG);\n","const { OpenAI } = require(\"openai\");\n","require(\"dotenv\").config();\n","admin.initializeApp({\n","  credential: admin.credential.cert(serviceAccount),\n","});\n","const app = express();\n","const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\n","\n","app.use(bodyParser.urlencoded({ extended: false }));\n","\n","app.post(\"/webhook\", async (req, res) => {\n","  const userMsg = req.body.Body || \"Hello!\";\n","  const from = req.body.From;\n","\n","  let aiReply = \"Sorry, I'm having trouble thinking right now.\";\n","\n","  try {\n","    const chat = await openai.chat.completions.create({\n","      model: \"gpt-3.5-turbo\",\n","      messages: [{ role: \"user\", content: userMsg }],\n","    });\n","\n","    aiReply = chat.choices[0].message.content.trim();\n","  } catch (error) {\n","    console.error(\"OpenAI Error:\", error);\n","  }\n","\n","  const twiml = `<Response><Message>${aiReply}</Message></Response>`;\n","  res.set(\"Content-Type\", \"text/xml\");\n","  res.send(twiml);\n","});\n","\n","const PORT = process.env.PORT || 3000;\n","app.listen(PORT, () => console.log(`Bot running on port ${PORT}`));"],"metadata":{"id":"nNFJj2Sc5SKk","colab":{"base_uri":"https://localhost:8080/","height":141},"executionInfo":{"status":"error","timestamp":1754061468832,"user_tz":-330,"elapsed":68,"user":{"displayName":"hacker","userId":"16484677361678373954"}},"outputId":"f402e0ac-9c25-4ae1-fe72-3200d8969c3f"},"execution_count":null,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid syntax (ipython-input-2721459981.py, line 1)","traceback":["\u001b[0;36m  File \u001b[0;32m\"/tmp/ipython-input-2721459981.py\"\u001b[0;36m, line \u001b[0;32m1\u001b[0m\n\u001b[0;31m    const express = require(\"express\");\u001b[0m\n\u001b[0m          ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"RZnk89vlgIzR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"ahh7h6nUgEH0"}},{"cell_type":"code","source":[],"metadata":{"id":"oJNnvh0ocOix"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q4CIeuTH5OtU"},"outputs":[],"source":[]}]}