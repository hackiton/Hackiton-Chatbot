{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNnHm9xqheU27FjCh/VsJgj"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["\n","const express = require(\"express\");\n","const bodyParser = require(\"body-parser\");\n","const admin = require(\"firebase-admin\");\n","const { OpenAI } = require(\"openai\");\n","require(\"dotenv\").config();\n","\n","const serviceAccount = JSON.parse(process.env.FIREBASE_CONFIG);\n","\n","admin.initializeApp({\n","  credential: admin.credential.cert(serviceAccount),\n","});\n","const db = admin.firestore();\n","\n","const app = express();\n","const port = process.env.PORT || 3000;\n","const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY });\n","\n","app.use(bodyParser.urlencoded({ extended: false }));\n","\n","// 🔁 Load last 10 messages from Firestore\n","async function getUserHistory(userId) {\n","  const ref = db.collection(\"conversations\").doc(userId);\n","  const doc = await ref.get();\n","  if (doc.exists) {\n","    return doc.data().history || [];\n","  }\n","  return [];\n","}\n","\n","// 💾 Save message to Firestore\n","async function updateUserHistory(userId, history) {\n","  const ref = db.collection(\"conversations\").doc(userId);\n","  await ref.set({ history });\n","}\n","\n","app.post(\"/webhook\", async (req, res) => {\n","  const userMsg = req.body.Body || \"Hello!\";\n","  const from = req.body.From;\n","\n","  let aiReply = \"I'm having trouble responding right now.\";\n","\n","  try {\n","    const history = await getUserHistory(from);\n","\n","    const messages = [\n","      ...history,\n","      { role: \"user\", content: userMsg }\n","    ];\n","\n","    const chat = await openai.chat.completions.create({\n","      model: \"gpt-3.5-turbo\",\n","      messages,\n","    });\n","\n","    aiReply = chat.choices[0].message.content.trim();\n","\n","    messages.push({ role: \"assistant\", content: aiReply });\n","    if (messages.length > 10) messages.shift(); // Keep only last 10 for memory\n","    await updateUserHistory(from, messages);\n","  } catch (error) {\n","    console.error(\"Error:\", error);\n","  }\n","\n","  const twiml = `<Response><Message>${aiReply}</Message></Response>`;\n","  res.set(\"Content-Type\", \"text/xml\");\n","  res.send(twiml);\n","});\n","\n","app.listen(port, () => console.log(`Hackiton bot running on port ${port}`));"],"metadata":{"id":"nNFJj2Sc5SKk","colab":{"base_uri":"https://localhost:8080/","height":159},"executionInfo":{"status":"error","timestamp":1754118098314,"user_tz":-330,"elapsed":1829,"user":{"displayName":"hacker","userId":"16484677361678373954"}},"outputId":"465d6bfc-ce01-421b-eef5-f7ba3ce51cd5"},"execution_count":1,"outputs":[{"output_type":"error","ename":"SyntaxError","evalue":"invalid character '🔁' (U+1F501) (ipython-input-2506943069.py, line 20)","traceback":["\u001b[0;36m  File \u001b[0;32m\"/tmp/ipython-input-2506943069.py\"\u001b[0;36m, line \u001b[0;32m20\u001b[0m\n\u001b[0;31m    // 🔁 Load last 10 messages from Firestore\u001b[0m\n\u001b[0m       ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid character '🔁' (U+1F501)\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"RZnk89vlgIzR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"ahh7h6nUgEH0"}},{"cell_type":"code","source":[],"metadata":{"id":"oJNnvh0ocOix"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Q4CIeuTH5OtU"},"outputs":[],"source":[]}]}